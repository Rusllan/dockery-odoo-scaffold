# Repaclace this with your custom ci image, if needed
image: xoelabs/dockery-odoo:ci
cache:
  untracked: true
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
stages:
  - Pre-Build
  - Build
  - Test
  - Stage
  - Release
before_script:
- docker version
- docker-compose version
- kubectl version --client
- terraform version
- consul version
- etcdctl version
# Set the repo's environment
- export $(egrep -v '^#' .env | xargs)
- chmod -R +x ./hack

Update-Project-Image:
  stage: Pre-Build
  only: [branches]
  # Run this job on runners with docker-socket binding
  # See: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-socket-binding
  tags: [image-builder]
  except: ['/^HOTFIX-.*$/']
  script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - ci-build-main.sh

Update-Tester:
  stage: Build
  only: [branches]
  # Run this job on runners with docker-socket binding
  # See: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-socket-binding
  tags: [image-builder]
  except: ['/^HOTFIX-.*$/']
  script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - ci-build-helper.sh tester

Update-Migrator:
  stage: Build
  only: [tags]
  # Run this job on runners with docker-socket binding
  # See: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-socket-binding
  tags: [image-builder]
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - ci-build-helper.sh migrator

Test-Diff:
  # Make sure $CI_REGISTRY_IMAGE is the same as $IMAGE
  image: "${CI_REGISTRY_IMAGE}:tester"
  only: [branches]
  except: ['/^HOTFIX-.*$/']
  stage: Test
  variables:
    # Database connection
    PGHOST: YOURHOST
    PGPORT: 5432
    PGUSER: YOURUSER
    PGPASSWORD: YOUERPASSWORD # Prefer using more secure gitlab ci variables
    # Modules configuration
    BASEBRANCH: origin/master
    INCLUDE: YOUR_INTEGRATION_TEST_MODULE
    # Helper variables
    ODOO_BASEPATH: /testbed
    DB_SLUG: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
  before_script:
    - echo "... mute global before script."
  script:
    - prepare-testbed
    # Symlink vendored modules
    # - ln -s "${CI_PROJECT_DIR}/vendor/oca/job-queue"       "${ODOO_BASEPATH}/addons/010"
    - exec-test-on-diff

Migrate-Staged-DBs:
  # Make sure $CI_REGISTRY_IMAGE is the same as $IMAGE
  image:
    name: "${CI_REGISTRY_IMAGE}:migrator"
    entrypoint: [""]
  only: [tags]
  stage: Stage
  variables:
    STAGED_DBS: "vspace separated list of existing dbs to stage migration"
    # Database connection
    MARABUNTA_DB_HOST: YOURHOST
    MARABUNTA_DB_PORT: 5432
    MARABUNTA_DB_USER: YOURUSER
    MARABUNTA_DB_PASSWORD: YOURPASSWORD
  before_script:
    - echo "... mute global before script."
  script:
    - |
        for db in ${STAGED_DBS}; do
            /entrypoint-migrator.sh -f ./.marabunta.yml --database "${db}"
        done


Release-Project-Image:
  stage: Release
  only: [tags]
  # Run this job on runners with docker-socket binding
  # See: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-socket-binding
  tags: [image-builder]
  allow_failure: false
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - ci-build-main.sh "${CI_COMMIT_TAG}"
  environment: production

# CI GIT & Component Configuration
variables:
  GIT_DEPTH: '10'
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: 'recursive'
  GIT_SSL_NO_VERIFY: "true"
